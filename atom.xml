<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Soroke&#39;s blog</title>
  
  <subtitle>记录学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.soroke.top/"/>
  <updated>2020-11-20T02:36:08.964Z</updated>
  <id>https://blog.soroke.top/</id>
  
  <author>
    <name>Soroke</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>intellij激活(2020.1.3及之前版本有效)</title>
    <link href="https://blog.soroke.top/2020/11/20/intellij%E6%BF%80%E6%B4%BB-2020-1-3%E5%8F%8A%E4%B9%8B%E5%89%8D%E7%89%88%E6%9C%AC%E6%9C%89%E6%95%88/"/>
    <id>https://blog.soroke.top/2020/11/20/intellij激活-2020-1-3及之前版本有效/</id>
    <published>2020-11-20T01:43:04.000Z</published>
    <updated>2020-11-20T02:36:08.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件包"><a href="#软件包" class="headerlink" title="软件包"></a>软件包</h1><table><thead><tr><th style="text-align:left">软件名称</th><th style="text-align:center">软件下载地址</th></tr></thead><tbody><tr><td style="text-align:left">IDEA2020.1.3</td><td style="text-align:center"><a href="https://download.jetbrains.com/idea/ideaIU-2020.1.3.exe">下载地址</a></td></tr><tr><td style="text-align:left">破解工具包</td><td style="text-align:center"><a href="/lib/jetbrains-agent-latest.zip">下载地址</a></td></tr></tbody></table><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请勿升级到2020.1.4版本，会导致无法激活，请使用2020.1.3及以下版本！  </span><br><span class="line">如果之前在lib目录下已经有了jar文件，请一定要删除它！ </span><br><span class="line">不需要修改host！！！！</span><br></pre></td></tr></table></figure><h1 id="破解方法"><a href="#破解方法" class="headerlink" title="破解方法"></a>破解方法</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正常安装IDEA2020.1.3,安装完成后打开  </span><br><span class="line">在能进入软件的前提下，直接将压缩包拖进软件就可以加载补丁了！一定要拖入右边的工作区，而不是左边项目结构区！  </span><br><span class="line">然后会重启idea，重启完成后点击安装按钮</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;软件包&quot;&gt;&lt;a href=&quot;#软件包&quot; class=&quot;headerlink&quot; title=&quot;软件包&quot;&gt;&lt;/a&gt;软件包&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;软件名称&lt;/th&gt;
&lt;th style=
      
    
    </summary>
    
      <category term="破解" scheme="https://blog.soroke.top/categories/%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="intellij激活" scheme="https://blog.soroke.top/tags/intellij%E6%BF%80%E6%B4%BB/"/>
    
      <category term="破解" scheme="https://blog.soroke.top/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Harbor平台搭建安装</title>
    <link href="https://blog.soroke.top/2020/11/19/Harbor%E5%B9%B3%E5%8F%B0%E6%90%AD%E5%BB%BA%E5%AE%89%E8%A3%85/"/>
    <id>https://blog.soroke.top/2020/11/19/Harbor平台搭建安装/</id>
    <published>2020-11-19T13:02:39.000Z</published>
    <updated>2020-11-20T01:20:54.538Z</updated>
    
    <content type="html"><![CDATA[<h1 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h1><table><thead><tr><th style="text-align:left">硬件资源</th><th style="text-align:center">最低配置</th><th style="text-align:center">推荐配置</th></tr></thead><tbody><tr><td style="text-align:left">处理器</td><td style="text-align:center">2个CPU</td><td style="text-align:center">4个CPU</td></tr><tr><td style="text-align:left">内存</td><td style="text-align:center">4GB</td><td style="text-align:center">8GB</td></tr><tr><td style="text-align:left">磁盘</td><td style="text-align:center">40GB</td><td style="text-align:center">160GB</td></tr></tbody></table><h1 id="软件要求"><a href="#软件要求" class="headerlink" title="软件要求"></a>软件要求</h1><table><thead><tr><th style="text-align:left">软件资源</th><th style="text-align:center">版本</th></tr></thead><tbody><tr><td style="text-align:left">Docker engine</td><td style="text-align:center">v17.06.0-ce及以上</td></tr><tr><td style="text-align:left">Docker compose</td><td style="text-align:center">v1.18.0及以上</td></tr><tr><td style="text-align:left">openssl</td><td style="text-align:center">尽量使用最新版本</td></tr></tbody></table><a id="more"></a><h1 id="网络端口"><a href="#网络端口" class="headerlink" title="网络端口"></a>网络端口</h1><table><thead><tr><th style="text-align:left">端口</th><th style="text-align:center">协议</th></tr></thead><tbody><tr><td style="text-align:left">443</td><td style="text-align:center">https</td></tr><tr><td style="text-align:left">4443</td><td style="text-align:center">https</td></tr><tr><td style="text-align:left">80</td><td style="text-align:center">http</td></tr></tbody></table><hr><h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p>Harbor官方分别提供了在线版（不含组件镜像，相对较小）和离线版（包含组件镜像，相对较大）。</p><p>下载offline包就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;goharbor&#x2F;harbor&#x2F;releases</span><br></pre></td></tr></table></figure><hr><h1 id="创建自签名-https-证书"><a href="#创建自签名-https-证书" class="headerlink" title="创建自签名 https 证书"></a>创建自签名 https 证书</h1><h2 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h2><h3 id="创建证书目录，并赋予权限"><a href="#创建证书目录，并赋予权限" class="headerlink" title="创建证书目录，并赋予权限"></a>创建证书目录，并赋予权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir -p /data/cert &amp;&amp; chmod -R 777 /data/cert &amp;&amp; <span class="built_in">cd</span> /data/cert</span></span><br></pre></td></tr></table></figure><h3 id="创建CA根证书"><a href="#创建CA根证书" class="headerlink" title="创建CA根证书"></a>创建CA根证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> openssl req  -newkey rsa:4096 -nodes -sha256 -keyout ca.key -x509 -days 365 -out ca.crt -subj <span class="string">&quot;/C=CN/L=zhejiang/O=lisea/CN=harbor-registry&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="生成一个证书签名-假设设置访问域名为harbor-faxuan-net-自行替换域名"><a href="#生成一个证书签名-假设设置访问域名为harbor-faxuan-net-自行替换域名" class="headerlink" title="生成一个证书签名, 假设设置访问域名为harbor.faxuan.net(自行替换域名)"></a>生成一个证书签名, 假设设置访问域名为harbor.faxuan.net(自行替换域名)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> openssl req -newkey rsa:4096 -nodes -sha256 -keyout harbor.faxuan.net.key -out server.csr -subj <span class="string">&quot;/C=CN/L=zhejiang/O=lisea/CN=harbor.faxuan.net&quot;</span></span></span><br></pre></td></tr></table></figure><h3 id="生成主机的证书-自行替换域名"><a href="#生成主机的证书-自行替换域名" class="headerlink" title="生成主机的证书(自行替换域名)"></a>生成主机的证书(自行替换域名)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> openssl x509 -req -days 365 -<span class="keyword">in</span> server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out harbor.faxuan.net.crt</span></span><br></pre></td></tr></table></figure><h2 id="创建客户端使用证书"><a href="#创建客户端使用证书" class="headerlink" title="创建客户端使用证书"></a>创建客户端使用证书</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir harbor.faxuan.net</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp ca.crt harbor.faxuan.net &amp;&amp; cp harbor.faxuan.net.key harbor.faxuan.net &amp;&amp; cp harbor.faxuan.net.crt harbor.faxuan.net/harbor.faxuan.net.cert</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -czvf harbor.faxuan.net.tar.gz harbor.faxuan.net</span></span><br></pre></td></tr></table></figure><p>执行完成后在当前目录下会生成一个harbor.faxuan.net.tar.gz文件，这个文件就是客户端需要使用的文件</p><hr><h1 id="部署安装"><a href="#部署安装" class="headerlink" title="部署安装"></a>部署安装</h1><h2 id="解压软件包"><a href="#解压软件包" class="headerlink" title="解压软件包"></a>解压软件包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf harbor-offline-installer-v2.1.0.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> harbor</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim harbor.yml</span></span><br></pre></td></tr></table></figure><p>修改如下配置<br>hostname: harbor.faxuan.net  <strong>修改为自己的域名</strong><br>http:<br>  port: 80  </p><p>https:<br>  port: 443<br>  certificate: /data/cert/harbor.faxuan.net.crt  <strong>修改为自己的路径以及证书</strong><br>  private_key: /data/cert/harbor.faxuan.net.key  <strong>修改为自己的路径以及证书</strong>  </p><p>harbor_admin_password: Fxzx1234  <strong>管理员密码</strong></p><h2 id="执行安装"><a href="#执行安装" class="headerlink" title="执行安装"></a>执行安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./install.sh</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">[root@hub harbor]# .&#x2F;install.sh</span><br><span class="line"></span><br><span class="line">[Step 0]: checking if docker is installed ...</span><br><span class="line">Note: docker version: 19.03.8</span><br><span class="line"></span><br><span class="line">[Step 1]: checking docker-compose is installed ...</span><br><span class="line">Note: docker-compose version: 1.23.1</span><br><span class="line"></span><br><span class="line">[Step 2]: loading Harbor images ...</span><br><span class="line">Loaded image: goharbor&#x2F;clair-adapter-photon:v1.0.1-v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-jobservice:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;redis-photon:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;notary-server-photon:v0.6.1-v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;clair-photon:v2.1.1-v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-log:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;registry-photon:v2.7.1-patch-2819-2553-v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;notary-signer-photon:v0.6.1-v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;chartmuseum-photon:v0.9.0-v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-registryctl:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;nginx-photon:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-migrator:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;prepare:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-portal:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-core:v1.10.1</span><br><span class="line">Loaded image: goharbor&#x2F;harbor-db:v1.10.1</span><br><span class="line"></span><br><span class="line">[Step 3]: preparing environment ...</span><br><span class="line"></span><br><span class="line">[Step 4]: preparing harbor configs ...</span><br><span class="line">prepare base dir is set to &#x2F;root&#x2F;harbor</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;log&#x2F;logrotate.conf</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;log&#x2F;rsyslog_docker.conf</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;nginx&#x2F;conf.d&#x2F;notary.upstream.conf</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;nginx&#x2F;conf.d&#x2F;notary.server.conf</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;core&#x2F;env</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;core&#x2F;app.conf</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;registry&#x2F;config.yml</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;registry&#x2F;root.crt</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;registryctl&#x2F;env</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;registryctl&#x2F;config.yml</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;db&#x2F;env</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;jobservice&#x2F;env</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;jobservice&#x2F;config.yml</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;server-config.postgres.json</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;server_env</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;signer_env</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;signer-config.postgres.json</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;notary-signer.crt</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;notary-signer.key</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;notary-signer-ca.crt</span><br><span class="line">Clearing the configuration file: &#x2F;config&#x2F;notary&#x2F;root.crt</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;log&#x2F;logrotate.conf</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;log&#x2F;rsyslog_docker.conf</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;core&#x2F;env</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;core&#x2F;app.conf</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;registry&#x2F;config.yml</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;registryctl&#x2F;env</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;db&#x2F;env</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;jobservice&#x2F;env</span><br><span class="line">Generated configuration file: &#x2F;config&#x2F;jobservice&#x2F;config.yml</span><br><span class="line">loaded secret from file: &#x2F;secret&#x2F;keys&#x2F;secretkey</span><br><span class="line">Generated configuration file: &#x2F;compose_location&#x2F;docker-compose.yml</span><br><span class="line">Clean up the input dir</span><br><span class="line"></span><br><span class="line"># 如果已安装harbor将会自动移除</span><br><span class="line">Note: stopping existing Harbor instance ...</span><br><span class="line">Stopping nginx             ... done</span><br><span class="line">Stopping harbor-jobservice ... done</span><br><span class="line">Stopping harbor-core       ... done</span><br><span class="line">Stopping redis             ... done</span><br><span class="line">Stopping harbor-portal     ... done</span><br><span class="line">Stopping registry          ... done</span><br><span class="line">Stopping harbor-db         ... done</span><br><span class="line">Stopping harbor-log        ... done</span><br><span class="line">Removing nginx             ... done</span><br><span class="line">Removing harbor-jobservice ... done</span><br><span class="line">Removing harbor-core       ... done</span><br><span class="line">Removing redis             ... done</span><br><span class="line">Removing harbor-portal     ... done</span><br><span class="line">Removing registry          ... done</span><br><span class="line">Removing harbor-db         ... done</span><br><span class="line">Removing registryctl       ... done</span><br><span class="line">Removing harbor-log        ... done</span><br><span class="line">Removing network harbor_harbor</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Step 5]: starting Harbor ...</span><br><span class="line">Creating network &quot;harbor_harbor&quot; with the default driver</span><br><span class="line">Creating harbor-log ... done</span><br><span class="line">Creating harbor-portal ... done</span><br><span class="line">Creating registry      ... done</span><br><span class="line">Creating redis         ... done</span><br><span class="line">Creating harbor-db     ... done</span><br><span class="line">Creating registryctl   ... done</span><br><span class="line">Creating harbor-core   ... done</span><br><span class="line">Creating harbor-jobservice ... done</span><br><span class="line">Creating nginx             ... done</span><br><span class="line">✔ ----Harbor has been installed and started successfully.----</span><br></pre></td></tr></table></figure><h1 id="客户端配置证书并登录"><a href="#客户端配置证书并登录" class="headerlink" title="客户端配置证书并登录"></a>客户端配置证书并登录</h1><h2 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;</span><br><span class="line">$ cd &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;</span><br><span class="line">$ rz -be harbor.faxuan.net.tar.gz  上传证书压缩包到当前目录(压缩包见步骤证书生成)</span><br><span class="line">$ tar -xvf harbor.faxuan.net.tar.gz</span><br><span class="line">$ systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="配置hosts"><a href="#配置hosts" class="headerlink" title="配置hosts"></a>配置hosts</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> <span class="string">&quot;xx.xx.xx.xx harbor.faxuan.net&quot;</span> &gt;&gt; /etc/hosts</span></span><br></pre></td></tr></table></figure><h2 id="登录到harbor平台"><a href="#登录到harbor平台" class="headerlink" title="登录到harbor平台"></a>登录到harbor平台</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker login harbor.faxuan.net</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>生成镜像时 镜像名称需要指定为 harbor.faxuan.net/项目名称/镜像名称:version</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;硬件要求&quot;&gt;&lt;a href=&quot;#硬件要求&quot; class=&quot;headerlink&quot; title=&quot;硬件要求&quot;&gt;&lt;/a&gt;硬件要求&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;硬件资源&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;最低配置&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;推荐配置&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;处理器&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2个CPU&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4个CPU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;内存&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4GB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8GB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;磁盘&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;40GB&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;160GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;软件要求&quot;&gt;&lt;a href=&quot;#软件要求&quot; class=&quot;headerlink&quot; title=&quot;软件要求&quot;&gt;&lt;/a&gt;软件要求&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;软件资源&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;版本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Docker engine&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;v17.06.0-ce及以上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Docker compose&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;v1.18.0及以上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;openssl&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;尽量使用最新版本&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="运维" scheme="https://blog.soroke.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="docker" scheme="https://blog.soroke.top/categories/%E8%BF%90%E7%BB%B4/docker/"/>
    
    
      <category term="docker" scheme="https://blog.soroke.top/tags/docker/"/>
    
      <category term="harbor" scheme="https://blog.soroke.top/tags/harbor/"/>
    
  </entry>
  
  <entry>
    <title>使用docker和docker-compose启动Jenkins</title>
    <link href="https://blog.soroke.top/2020/11/18/%E4%BD%BF%E7%94%A8docker%E5%92%8Cdocker-compose%E5%90%AF%E5%8A%A8Jenkins/"/>
    <id>https://blog.soroke.top/2020/11/18/使用docker和docker-compose启动Jenkins/</id>
    <published>2020-11-18T14:04:55.000Z</published>
    <updated>2020-11-20T01:20:54.542Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础环境"><a href="#基础环境" class="headerlink" title="基础环境"></a>基础环境</h2><p>所需软件如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">jdk</span><br><span class="line">docker</span><br><span class="line">docker-compose</span><br></pre></td></tr></table></figure></p><h2 id="yml文件配置"><a href="#yml文件配置" class="headerlink" title="yml文件配置"></a>yml文件配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">jenkins:</span><br><span class="line">    image: jenkins&#x2F;jenkins:lts</span><br><span class="line">    volumes:</span><br><span class="line">        - .&#x2F;jenkins_home&#x2F;:&#x2F;var&#x2F;jenkins_home</span><br><span class="line">        - &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock</span><br><span class="line">        - &#x2F;usr&#x2F;bin&#x2F;docker:&#x2F;usr&#x2F;bin&#x2F;docker</span><br><span class="line">        - &#x2F;usr&#x2F;lib64&#x2F;libltdl.so.7:&#x2F;usr&#x2F;lib64&#x2F;libltdl.so.7</span><br><span class="line">        - &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose:&#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-compose</span><br><span class="line">    ports:</span><br><span class="line">        - &quot;80:8080&quot;</span><br><span class="line">        - &quot;50000:50000&quot;</span><br><span class="line">    privileged: true</span><br><span class="line">    user: root</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: Jenkins</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="启动jenkins"><a href="#启动jenkins" class="headerlink" title="启动jenkins"></a>启动jenkins</h2><p> 将第二步中的yaml文件放在指定目录下，然后进入该文件夹，启动服务<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up -d</span><br></pre></td></tr></table></figure></p><h2 id="访问并安装插件"><a href="#访问并安装插件" class="headerlink" title="访问并安装插件"></a>访问并安装插件</h2><p>访问本机<a href="http://localhost:80">http://localhost:80</a></p><p>首次访问需要密码，查看默认生成密码：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cat jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><h2 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h2><h3 id="一直卡在启动页面"><a href="#一直卡在启动页面" class="headerlink" title="一直卡在启动页面"></a>一直卡在启动页面</h3><p>修改文件：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim jenkins_home/hudson.model.UpdateCenter.xml</span><br></pre></td></tr></table></figure><br>将<a href="https://updates.jenkins.io/update-center.json">https://updates.jenkins.io/update-center.json</a></p><p>修改为 <a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a></p><p>然后重启服务</p><hr><h3 id="Jenkins离线"><a href="#Jenkins离线" class="headerlink" title="Jenkins离线"></a>Jenkins离线</h3><p>修改文件<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vim jenkins_home/updates/default.json</span><br></pre></td></tr></table></figure><br>修改第一行的”connectionCheckUrl”:<a href="http://www.google.com/“">http://www.google.com/“</a></p><p>改为：”connectionCheckUrl”:<a href="http://www.baidu.com/“">http://www.baidu.com/“</a></p><p>然后重启服务</p><hr><h3 id="安装完成后，空白页面"><a href="#安装完成后，空白页面" class="headerlink" title="安装完成后，空白页面"></a>安装完成后，空白页面</h3><p>重启服务<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose restart</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基础环境&quot;&gt;&lt;a href=&quot;#基础环境&quot; class=&quot;headerlink&quot; title=&quot;基础环境&quot;&gt;&lt;/a&gt;基础环境&lt;/h2&gt;&lt;p&gt;所需软件如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jdk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;yml文件配置&quot;&gt;&lt;a href=&quot;#yml文件配置&quot; class=&quot;headerlink&quot; title=&quot;yml文件配置&quot;&gt;&lt;/a&gt;yml文件配置&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;jenkins:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    image: jenkins&amp;#x2F;jenkins:lts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    volumes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - .&amp;#x2F;jenkins_home&amp;#x2F;:&amp;#x2F;var&amp;#x2F;jenkins_home&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#x2F;var&amp;#x2F;run&amp;#x2F;docker.sock:&amp;#x2F;var&amp;#x2F;run&amp;#x2F;docker.sock&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;docker:&amp;#x2F;usr&amp;#x2F;bin&amp;#x2F;docker&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#x2F;usr&amp;#x2F;lib64&amp;#x2F;libltdl.so.7:&amp;#x2F;usr&amp;#x2F;lib64&amp;#x2F;libltdl.so.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;#x2F;usr&amp;#x2F;local&amp;#x2F;bin&amp;#x2F;docker-compose:&amp;#x2F;usr&amp;#x2F;local&amp;#x2F;bin&amp;#x2F;docker-compose&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ports:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;quot;80:8080&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        - &amp;quot;50000:50000&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    privileged: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    user: root&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    restart: always&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    container_name: Jenkins&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="运维" scheme="https://blog.soroke.top/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="docker" scheme="https://blog.soroke.top/tags/docker/"/>
    
      <category term="Jenkins" scheme="https://blog.soroke.top/tags/Jenkins/"/>
    
  </entry>
  
</feed>
